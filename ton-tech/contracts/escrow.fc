#pragma version >=0.2.0;

#include "imports/stdlib.fc";

int equal_slices (slice a, slice b) asm "SDEQ";

(int, slice, slice, slice, int, int) load_data() inline {
    slice ds = get_data().begin_parse();
    return (
        ds~load_uint(8), ;; storage tag
        ds~load_msg_addr(), ;; seller
        ds~load_msg_addr(), ;; buyer
        ds~load_msg_addr(), ;; guarantor
        ds~load_coins(), ;; amount
        ds~load_uint(1) ;; is_completed
    );
}

() save_data(int tag, slice seller, slice buyer, slice guarantor, int amount, int is_completed) impure inline {
    set_data(begin_cell()
        .store_uint(tag, 8)
        .store_slice(seller)
        .store_slice(buyer)
        .store_slice(guarantor)
        .store_coins(amount)
        .store_uint(is_completed, 1)
        .end_cell());
}

() recv_internal(int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) { 
        return ();
    }

    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);
    if (flags & 1) {
        return ();
    }
    slice sender_address = cs~load_msg_addr();

    int op = in_msg_body~load_uint(32);
    int query_id = in_msg_body~load_uint(64);

    if (op == 0x1) { ;; deploy 
        slice seller = in_msg_body~load_msg_addr();
        slice buyer = in_msg_body~load_msg_addr();
        slice guarantor = in_msg_body~load_msg_addr();
        int amount = in_msg_body~load_coins();

        save_data(0, seller, buyer, guarantor, amount, 0);
        return ();
    }

    if (op == 0x2) { ;; deposit
        (int tag, slice seller, slice buyer, slice guarantor, int amount, int is_completed) = load_data();
        
        throw_unless(74, is_completed == 0);
        throw_unless(75, equal_slices(sender_address, buyer));
        throw_unless(76, msg_value >= amount);
        
        save_data(tag, seller, buyer, guarantor, amount, 0);
        return ();
    }

    if (op == 0x3) { ;; complete
        (int tag, slice seller, slice buyer, slice guarantor, int amount, int is_completed) = load_data();
        
        throw_unless(77, is_completed == 0);
        throw_unless(78, equal_slices(sender_address, guarantor));
        
        cell msg_body = begin_cell()
            .store_uint(0xf8a7ea5, 32)
            .store_uint(query_id, 64)
            .store_coins(amount)
            .end_cell();
            
        var msg = begin_cell()
            .store_uint(0x10, 6)
            .store_slice(seller)
            .store_grams(amount)
            .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
            .store_slice(sender_address)
            .store_ref(msg_body)
            .end_cell();
            
        send_raw_message(msg, 64);
        
        save_data(tag, seller, buyer, guarantor, amount, 1);
        return ();
    }

    if (op == 0x4) { ;; refund
        (int tag, slice seller, slice buyer, slice guarantor, int amount, int is_completed) = load_data();
        
        throw_unless(79, is_completed == 0);
        throw_unless(80, equal_slices(sender_address, guarantor));
        
        cell msg_body = begin_cell()
            .store_uint(0xf8a7ea5, 32)
            .store_uint(query_id, 64)
            .store_coins(amount)
            .end_cell();
            
        var msg = begin_cell()
            .store_uint(0x10, 6)
            .store_slice(buyer)
            .store_grams(amount)
            .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
            .store_slice(sender_address)
            .store_ref(msg_body)
            .end_cell();
            
        send_raw_message(msg, 64);
        
        save_data(tag, seller, buyer, guarantor, amount, 1);
        return ();
    }

    throw(0xffff);
}

